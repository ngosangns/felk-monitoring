input {
  # Log WordPress container (nếu cần)
  file {
    path => "/var/lib/docker/containers/*-wordpress-web*/**/*.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    codec => "json"
    type => "wordpress"
  }
  # Nginx access log
  file {
    path => "/nginxlog/access.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "nginx_access"
  }
  # Nginx error log
  file {
    path => "/nginxlog/error.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "nginx_error"
  }
  # MySQL general log
  file {
    path => "/mysqllog/general.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "mysql_general"
  }
  # MySQL slow query log
  file {
    path => "/mysqllog/slow.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "mysql_slow"
  }
  # MySQL error log
  file {
    path => "/mysqllog/error.log"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "mysql_error"
  }
}

filter {
  # Gắn nhãn service cho từng loại log
  if [type] == "nginx_access" {
    mutate { add_field => { "service" => "nginx" } }
    grok {
      match => { "message" => "%{IP:remote_addr} - %{DATA:remote_user} \[%{HTTPDATE:time_local}\] \"%{WORD:method} %{URIPATHPARAM:request} HTTP/%{NUMBER:http_version}\" %{NUMBER:status} %{NUMBER:body_bytes_sent} \"%{DATA:http_referer}\" \"%{DATA:user_agent}\"" }
      remove_field => ["message"]
    }
    useragent {
      source => "user_agent"
      target => "user_agent_data"
    }
      geoip {
        source => "remote_addr"
        target => "geoip"
      }
  }
  if [type] == "nginx_error" {
    mutate { add_field => { "service" => "nginx" } }
    if "error" not in [message] {
      drop {}
    }
  }
  if [type] =~ /^mysql_/ {
    mutate { add_field => { "service" => "mysql" } }
  }
  if [type] == "mysql_slow" {
    grok {
      match => { "message" => "%{GREEDYDATA:slow_query}" }
    }
  }
  if [type] == "wordpress" {
    mutate { add_field => { "service" => "wordpress" } }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "%{type}-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug }
}
